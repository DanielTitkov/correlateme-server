// Code generated by entc, DO NOT EDIT.

package dictionary

const (
	// Label holds the string label denoting the dictionary type in the database.
	Label = "dictionary"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"

	// EdgeEntries holds the string denoting the entries edge name in mutations.
	EdgeEntries = "entries"

	// Table holds the table name of the dictionary in the database.
	Table = "dictionaries"
	// EntriesTable is the table the holds the entries relation/edge.
	EntriesTable = "dictionary_entries"
	// EntriesInverseTable is the table name for the DictionaryEntry entity.
	// It exists in this package in order to avoid circular dependency with the "dictionaryentry" package.
	EntriesInverseTable = "dictionary_entries"
	// EntriesColumn is the table column denoting the entries relation/edge.
	EntriesColumn = "dictionary_entries"
)

// Columns holds all SQL columns for dictionary fields.
var Columns = []string{
	FieldID,
	FieldCode,
	FieldDescription,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// CodeValidator is a validator for the "code" field. It is called by the builders before save.
	CodeValidator func(string) error
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(int) error
)
