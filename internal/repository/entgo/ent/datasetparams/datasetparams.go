// Code generated by entc, DO NOT EDIT.

package datasetparams

const (
	// Label holds the string label denoting the datasetparams type in the database.
	Label = "dataset_params"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStyle holds the string denoting the style field in the database.
	FieldStyle = "style"
	// FieldAggregation holds the string denoting the aggregation field in the database.
	FieldAggregation = "aggregation"

	// EdgeDataset holds the string denoting the dataset edge name in mutations.
	EdgeDataset = "dataset"

	// Table holds the table name of the datasetparams in the database.
	Table = "dataset_params"
	// DatasetTable is the table the holds the dataset relation/edge.
	DatasetTable = "dataset_params"
	// DatasetInverseTable is the table name for the Dataset entity.
	// It exists in this package in order to avoid circular dependency with the "dataset" package.
	DatasetInverseTable = "datasets"
	// DatasetColumn is the table column denoting the dataset relation/edge.
	DatasetColumn = "dataset_dataset_params"
)

// Columns holds all SQL columns for datasetparams fields.
var Columns = []string{
	FieldID,
	FieldStyle,
	FieldAggregation,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the DatasetParams type.
var ForeignKeys = []string{
	"dataset_dataset_params",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
