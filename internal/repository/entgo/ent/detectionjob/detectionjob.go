// Code generated by entc, DO NOT EDIT.

package detectionjob

import (
	"time"
)

const (
	// Label holds the string label denoting the detectionjob type in the database.
	Label = "detection_job"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldSchedule holds the string denoting the schedule field in the database.
	FieldSchedule = "schedule"
	// FieldMethod holds the string denoting the method field in the database.
	FieldMethod = "method"
	// FieldSiteID holds the string denoting the site_id field in the database.
	FieldSiteID = "site_id"
	// FieldMetric holds the string denoting the metric field in the database.
	FieldMetric = "metric"
	// FieldAttribute holds the string denoting the attribute field in the database.
	FieldAttribute = "attribute"
	// FieldTimeAgo holds the string denoting the time_ago field in the database.
	FieldTimeAgo = "time_ago"
	// FieldTimeStep holds the string denoting the time_step field in the database.
	FieldTimeStep = "time_step"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"

	// EdgeInstance holds the string denoting the instance edge name in mutations.
	EdgeInstance = "instance"

	// Table holds the table name of the detectionjob in the database.
	Table = "detection_jobs"
	// InstanceTable is the table the holds the instance relation/edge.
	InstanceTable = "detection_job_instances"
	// InstanceInverseTable is the table name for the DetectionJobInstance entity.
	// It exists in this package in order to avoid circular dependency with the "detectionjobinstance" package.
	InstanceInverseTable = "detection_job_instances"
	// InstanceColumn is the table column denoting the instance relation/edge.
	InstanceColumn = "detection_job_instance"
)

// Columns holds all SQL columns for detectionjob fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldSchedule,
	FieldMethod,
	FieldSiteID,
	FieldMetric,
	FieldAttribute,
	FieldTimeAgo,
	FieldTimeStep,
	FieldDescription,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// MethodValidator is a validator for the "method" field. It is called by the builders before save.
	MethodValidator func(string) error
	// SiteIDValidator is a validator for the "site_id" field. It is called by the builders before save.
	SiteIDValidator func(string) error
	// MetricValidator is a validator for the "metric" field. It is called by the builders before save.
	MetricValidator func(string) error
	// AttributeValidator is a validator for the "attribute" field. It is called by the builders before save.
	AttributeValidator func(string) error
	// TimeAgoValidator is a validator for the "time_ago" field. It is called by the builders before save.
	TimeAgoValidator func(string) error
	// TimeStepValidator is a validator for the "time_step" field. It is called by the builders before save.
	TimeStepValidator func(string) error
)
