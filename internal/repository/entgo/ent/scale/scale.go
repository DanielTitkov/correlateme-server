// Code generated by entc, DO NOT EDIT.

package scale

const (
	// Label holds the string label denoting the scale type in the database.
	Label = "scale"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"

	// EdgeIndicators holds the string denoting the indicators edge name in mutations.
	EdgeIndicators = "indicators"

	// Table holds the table name of the scale in the database.
	Table = "scales"
	// IndicatorsTable is the table the holds the indicators relation/edge.
	IndicatorsTable = "indicators"
	// IndicatorsInverseTable is the table name for the Indicator entity.
	// It exists in this package in order to avoid circular dependency with the "indicator" package.
	IndicatorsInverseTable = "indicators"
	// IndicatorsColumn is the table column denoting the indicators relation/edge.
	IndicatorsColumn = "scale_indicators"
)

// Columns holds all SQL columns for scale fields.
var Columns = []string{
	FieldID,
	FieldType,
	FieldTitle,
	FieldDescription,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TypeValidator is a validator for the "type" field. It is called by the builders before save.
	TypeValidator func(string) error
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	DescriptionValidator func(string) error
)
